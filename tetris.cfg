#
#  Configuration file for `TETRIS Queen'
#



[tetris]

# Sound (digi) & Music (midi) volumes (range 0-100)
digi_volume = 
midi_volume = 


# The configuration of the controls.
[player1]
left = 
right = 
down = 
rot_left = 
rot_right = 

[player2]
left = 
right = 
down = 
rot_left = 
rot_right = 



[allegro]



# Unix system drivers:
#
#  XWIN     - XWindows
#  LNXC     - Linux console

system = 



# DOS graphics drivers:
#
#  VGA      - Standard VGA
#  MODX     - Mode-X
#  VBE1     - VESA 1.x
#  VB2B     - VBE 2.0 (banked)
#  VB2L     - VBE 2.0 (linear)
#  VBE3     - VBE 3.0
#  VBAF     - VBE/AF
#  XTND     - Xtended mode
#
# Windows graphics drivers:
#
#  DXAC     - DirectX with hardware acceleration
#  DXSO     - DirectX without hardware acceleration
#  DXSA     - DirectX in safe-mode, with all the fancy features disabled
#  DXWN     - DirectX in windowed mode
#  DXOV     - DirectX overlay (fast windowed mode, only works on some cards)
#  GDIB     - GDI mode (slow windowed mode, works on all cards)
#
# Linux console graphics drivers:
#
#  FB       - fbcon device
#  VBAF     - VBE/AF
#  SVGA     - SVGAlib
#  VGA      - Standard VGA
#  MODX     - Mode-X
#
# X graphics drivers:
#
#  XWIN     - standard X Windows
#  XDGA     - XFree86 Direct Graphics Access 1.0 (DGA)
#  XDFS     - Fullscreen DGA 1.0 mode
#  DGA2     - DGA 2.0 mode
#  DGAS     - DGA 2.0 software only mode
#
# BeOS graphics drivers:
#
#  BFS      - Fullscreen
#  BFSS     - Fullscreen safe
#  BWN      - Windowed
#
# You can also specify different drivers for a particular mode or color
# depth, eg. "gfx_card_640x480x16 = VBE3", "gfx_card_24bpp = VBE1", or
# you can provide a number of alternative drivers, for example
# "gfx_card1 = VGA", "gfx_card2 = MODX", etc.

gfx_card = 



# DOS and Linux: where to look for the VBE/AF driver
vbeaf_driver = 



# Linux only: fbcon device file (see below for fbcon timing data)
framebuffer = 



# Keyboard mapping file (this can be a .cfg file on disk, or an object from
# keyboard.dat). Currently available layouts are:
#
#  BE       - Belgium
#  BR       - Brazil
#  CH       - Swiss
#  CZ       - Czech
#  DE       - Germany
#  DK       - Denmark
#  DVORAK   - Dvorak
#  ES       - Spain
#  FI       - Finland
#  FR       - France
#  IT       - Italy
#  NO       - Norway
#  PT       - Portugal
#  RU       - Russian
#  SE       - Sweden
#  SK       - Slovak
#  UK       - United Kingdom
#  US       - United States

keyboard = 



# Language translation file (this can be a .cfg file on disk, or an 
# object from language.dat). Currently available translations are:
#
#  BR       - Portuguese (Brazil)
#  CZ       - Czech
#  DE       - German
#  DK       - Danish
#  EN       - English
#  ES       - Spanish
#  FI       - Finnish
#  FR       - French
#  IT       - Italian
#  NO       - Norwegian
#  RU       - Russian
#  SE       - Svenska
#  SK       - Slovak

language = 



# DOS mouse drivers:
#
#  MICK     - mickey mode driver (normally the best)
#  I33      - int 0x33 callback driver
#  POLL     - timer polling (for use under NT)
#
# Linux console mouse drivers:
#
#  LPS2     - PS2 mouse
#  LIPS     - PS2 mouse with Intellimouse extension
#  MS       - Microsoft serial mouse
#  IMS      - Microsoft serial mouse with Intellimouse extension
#  GPMD     - GPM repeater data (Mouse Systems protocol)

mouse = 



# Whether to emulate the third mouse button (yes or no)
emulate_three = 



# Linux only: name of the mouse device file (eg. /dev/mouse)
mouse_device = 



# Linux/fbcon mode timings. Duplicate then fill in `X', `Y' and
# the timings themselves. You can copy them from fb.modes directly -- the
# first two figures on the geometry line are X and Y here, and the figures
# on the timings line are the first fields here (up to `vsync_len')

[fb_mode_XxY]
pixclock = 
left_margin = 
right_margin = 
upper_margin = 
lower_margin = 
hsync_len = 
vsync_len = 
vmode = 
sync = 



[sound]



# DOS digital sound drivers:
#
#  0        - none
#  SB       - Sound Blaster (autodetect breed)
#  SB10     - Sound Blaster 1.0
#  SB15     - Sound Blaster 1.5
#  SB20     - Sound Blaster 2.0
#  SBP      - Sound Blaster Pro
#  SB16     - Sound Blaster 16
#  ESS      - ESS AudioDrive
#  ESC      - Ensoniq Soundscape
#  WSS      - Windows Sound System
#
# Windows digital sound drivers:
#
#  0        - none
#  DXA      - first DirectSound device
#  DXB      - second DirectSound device
#  ...      - etc
#  AXA      - first DirectSound device using Allegro mixer
#  AXB      - second DirectSound device using Allegro mixer
#  ...      - etc
#  WOA      - high quality WaveOut device
#  WOB      - low quality WaveOut device
#
# Unix digital sound drivers:
#
#  0        - none
#  OSSD     - Open Sound System
#  ESDD     - Enlightened Sound Daemon
#  ALSA     - ALSA Sound System
#
# BeOS digital sound drivers:
#
#  0        - none
#  BDIG     - BeOS digital sound system
#
digi_card = 



# DOS music drivers:
#
#  0        - none
#  OPL      - Adlib (autodetect OPL version)
#  OPL2     - OPL2 FM synth
#  OPLX     - Dual OPL2 (SB Pro-1)
#  OPL3     - OPL3 FM synth
#  SB       - raw SB MIDI interface
#  MPU      - MPU-401 MIDI interface
#  DIGI     - DIGMID software wavetable
#  AWE      - AWE32
#
# Windows music drivers:
#
#  0        - none
#  W32M     - win32 MIDI mapper
#  W32A     - first win32 MIDI device
#  W32B     - second win32 MIDI device
#  ...      - etc
#  DIGI     - DIGMID software wavetable
#
# Linux music drivers:
#
#  0        - none
#  OSSM     - Open Sound System
#  DIGI     - DIGMID software wavetable
#  AMID     - ALSA Sound System
#
# BeOS music drivers:
#
#  0        - none
#  BMID     - BeOS MIDI synthetizer
#  DIGI     - DIGMID software wavetable
# 
midi_card = 



# sound input drivers (same format as above, can usually be left blank)
digi_input_card = 
midi_input_card = 



# how many voices to reserve for each driver
digi_voices = 
midi_voices = 



# how loud? (range 0-255)
digi_volume = 
midi_volume = 



# sample mixing quality (0=fastest, 1=full 16 bit precision, 2=interpolation)
quality = 



# toggling this between 0 and 1 reverses the left/right panning of samples
flip_pan = 



# DOS and Unix: sample output frequency (eg. 44100)
sound_freq = 



# Unix only: preferred number of bits (8 or 16)
sound_bits = 



# Unix only: stereo output (1 or 0)
sound_stereo = 



# DOS only: soundcard port address (usually 220)
sound_port = 



# DOS only: soundcard DMA channel (usually 1)
sound_dma = 



# DOS only: soundcard IRQ number (usually 7)
sound_irq = 



# DOS only: FM synth port address (usually 388)
fm_port = 



# DOS only: MPU-401 port address (usually 330)
mpu_port = 



# DOS only: MPU-401 IRQ number (usually the same as sound_irq)
mpu_irq = 



# DOS only: instrument definitions for the Adlib driver
ibk_file = 
ibk_drum_file = 



# Unix only: OSS device driver name (usually /dev/dsp or /dev/audio)
oss_driver = 



# Unix only: number of OSS driver fragments (buffers) and size of each buffer
oss_numfrags = 
oss_fragsize = 



# Unix only: OSS MIDI device name (usually /dev/sequencer)
oss_midi_driver = 



# Unix only: OSS mixer device name (usually /dev/mixer)
oss_mixer_driver = 



# Unix only: name of the Enlightened Sound Daemon server
esd_server = 



# Unix only: card number and PCM device for the ALSA driver
alsa_card = 
alsa_pcmdevice = 



# Unix only: size of ALSA driver fragments (buffers)
alsa_numfrags = 



# BeOS only: MIDI synthetizer instruments quality (0=low, 1=high)
be_midi_quality = 



# BeOS only: MIDI sample mixing frequency in Hz (11025, 22050 or 44100)
be_midi_freq = 



# BeOS only: MIDI interpolation (0=none, 1=fast linear, 2=linear)
be_midi_interpolation = 



# BeOS only: MIDI reverberation intensity (0 to 5)
be_midi_reverb = 



# patch set for the DIGMID software wavetable driver
patches = 



[joystick]
joytype = 



# BeOS only: joystick device port name (as reported on system joystick prefs)
joystick_device = 

